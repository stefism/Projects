* {
    box-sizing: border-box;
}

body {
    margin: 0;
}

.container {
    border: 2px solid black;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    min-height: 500px;
    /* justify-content: flex-start; */
    justify-content: space-between;
    /* align-items: flex-start; */
    /* Манипулира елементите по противоположната ос.  */
    align-items: flex-start;
}

.child {
    min-height: 100px;
    min-width: 100px;
    background: burlywood;
    margin: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
}

#i1 {
    min-height: 150px;
    order: 1;
}

#i3 {
    order: -1;
    align-self: flex-end; /*Манипулира само конкретния елемент по противоположната ос в контейнера.Не работи ако е включено align-content на контейнера.;*/
}

ul {
    margin: 0;
    padding: 0;
    list-style: none;
}

ul a {
    text-decoration: none;
    color: black;
    font-size: 18px;
}

ul a:hover {
    text-decoration: underline;
}

header {
    background-color: lightgray;
    border-bottom: 2px solid darkblue;
    margin-bottom: 10px;
    padding: 20px 0;
    display: flex;
    justify-content: space-around;
    align-items: center;
}

nav ul {
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
}

nav li {
    margin-right: 15px;
}

.logo {
    font-size: 40px;
}

.login {
    border-radius: 5px;
    background: white;
    border: 0;
    padding: 10px;
}

#i4 {
    /* width: 600px; */
    flex-basis: 200px; /* На флекс елементите е препоръчително да се ползва това проперти. Указва колко да бъде началната големина на елемента. */

    flex-shrink: 1; /* Ще бъде 600пх но ако мястото е по-малко, ще започне да се свива спрямо свободното място.За да работи -> lex-grow трябва да е изключено или 0, */
    background: chartreuse;

    flex-grow: 0; /* Когато е 1, изпълва изцяло свободното мястов контейнера */
    /* flex: <flex-grow> <flex-shring> <flex-basis> -> комбинира горните три пропертите в едно. */
}

#i7 {
    background-color: crimson;
    flex-grow: 1;
}